#summary query
WITH base_events AS (
  SELECT
    user_pseudo_id,
    event_name,
    PARSE_DATE('%Y%m%d', CAST(event_date AS STRING)) AS date,
    TIMESTAMP_MICROS(event_timestamp) AS event_ts,
    geo.country,
    device.operating_system AS operating_system
  FROM
    `firebase-public-project.analytics_153293282.events_*`  
),

first_open_users AS (
  SELECT DISTINCT
    user_pseudo_id,
    PARSE_DATE('%Y%m%d', CAST(event_date AS STRING)) AS first_open_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    event_name = 'first_open'
)

SELECT
  b.user_pseudo_id,
  b.date,
  b.event_name,
  EXTRACT(HOUR FROM b.event_ts) AS hour,
  COUNT(*) AS total_events,
  COUNT(DISTINCT b.event_name) AS event_types,
  COUNTIF(b.event_name = 'level_start') > 0 AS Start,
  COUNTIF(b.event_name = 'level_up') > 0 AS Level_Up,
  COUNTIF(b.event_name = 'level_complete') > 0 AS Complete,
  COUNTIF(b.event_name = 'level_complete') > 0 AS converted,
  TIMESTAMP_DIFF(MAX(b.event_ts), MIN(b.event_ts), MINUTE) AS session_duration_minutes,
  b.country,
  b.operating_system,
  IF(b.date = f.first_open_date, TRUE, FALSE) AS is_new_user
FROM
  base_events b
LEFT JOIN
  first_open_users f
ON
  b.user_pseudo_id = f.user_pseudo_id
GROUP BY
  b.user_pseudo_id, b.event_name, b.date, hour, b.country, b.operating_system, f.first_open_date

#session_duration query
WITH base_events AS (
  SELECT
    user_pseudo_id,
    PARSE_DATE('%Y%m%d', CAST(event_date AS STRING)) AS date,
    platform,
    event_timestamp / 1000000 / 60 AS event_time_minutes
  FROM
    `firebase-public-project.analytics_153293282.events_*`
)
  SELECT
    user_pseudo_id,
    date,
    platform,
    MIN(event_time_minutes) AS session_start,
    MAX(event_time_minutes) AS session_end,
    ROUND(MAX(event_time_minutes) - MIN(event_time_minutes), 0) AS session_duration_minutes
  FROM base_events
  GROUP BY user_pseudo_id, date, platform

#retetion_cohort query
WITH monthly_users AS (
  SELECT
    user_pseudo_id,
    FORMAT_DATE('%Y-%m', DATE(TIMESTAMP_MICROS(event_timestamp))) AS event_month
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE user_pseudo_id IS NOT NULL
  GROUP BY
    user_pseudo_id, event_month
),

user_first_month AS (
  SELECT
    user_pseudo_id,
    MIN(event_month) AS cohort_month
  FROM
    monthly_users
  GROUP BY
    user_pseudo_id
),

retention_join AS (
  SELECT
    u.user_pseudo_id,
    u.cohort_month,
    m.event_month,
    DATE_DIFF(PARSE_DATE('%Y-%m', m.event_month), PARSE_DATE('%Y-%m', u.cohort_month), MONTH) AS month_diff
  FROM
    user_first_month u
  JOIN
    monthly_users m
  ON
    u.user_pseudo_id = m.user_pseudo_id
),

retention_counts AS (
  SELECT
    cohort_month,
    month_diff,
    COUNT(DISTINCT user_pseudo_id) AS retained_users
  FROM
    retention_join
  GROUP BY
    cohort_month, month_diff
),

cohort_sizes AS (
  SELECT
    cohort_month,
    COUNT(DISTINCT user_pseudo_id) AS total_users
  FROM
    user_first_month
  GROUP BY
    cohort_month
),

retention_rates AS (
  SELECT
    r.cohort_month,
    r.month_diff,
    ROUND(SAFE_DIVIDE(r.retained_users, c.total_users), 4) AS retention_rate
  FROM
    retention_counts r
  JOIN
    cohort_sizes c
  ON
    r.cohort_month = c.cohort_month
)

SELECT
  cohort_month,
  IFNULL(MAX(CASE WHEN month_diff = 0 THEN retention_rate END), 0) AS Month_0,
  IFNULL(MAX(CASE WHEN month_diff = 1 THEN retention_rate END), 0) AS Month_1,
  IFNULL(MAX(CASE WHEN month_diff = 2 THEN retention_rate END), 0) AS Month_2,
  IFNULL(MAX(CASE WHEN month_diff = 3 THEN retention_rate END), 0) AS Month_3
FROM
  retention_rates
GROUP BY
  cohort_month
ORDER BY
  cohort_month

